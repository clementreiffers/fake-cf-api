name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build-ubuntu:
    uses: clementreiffers/fake-cf-api/.github/workflows/rust.yml@main
  
  build-windows:
    uses: clementreiffers/fake-cf-api/.github/workflows/build-windows.yml@v1

  build-macos:
    uses: clementreiffers/fake-cf-api/.github/workflows/build-macos.yml@v1

  build-alpine:
    uses: clementreiffers/fake-cf-api/.github/workflows/build-alpine.yml@v1

  release-project:
    name: Release Project
    runs-on: ubuntu-latest
    needs: [ build-ubuntu, build-windows, build-macos, build-alpine ]
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          id: create_release
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Download ubuntu artifact content
        uses: actions/download-artifact@v2
        with:
          name: ${{ needs.build-alpine.outputs.release_name }}
      - name: Download windows artifact content
        uses: actions/download-artifact@v2
        with:
          name: ${{ needs.build-windows.outputs.release_name }}
      - name: Download macos artifact content
        uses: actions/download-artifact@v2
        with:
          name: ${{ needs.build-macos.outputs.release_name }}
      - name: Download alpine artifact content
        uses: actions/download-artifact@v2
        with:
          name: ${{ needs.build-ubuntu.outputs.release_name }}



      - name: Upload ubuntu release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ubuntu
          asset_name: fake-cf-api-release-ubuntu-v${{ github.run_number }}
          asset_content_type: application/octet-stream

      - name: Upload windows release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: rust-fake-cf-api.exe
          asset_name: fake-cf-api-release-windows-v${{ github.run_number }}.exe
          asset_content_type: application/x-msdownload

      - name: Upload alpine release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: alpine
          asset_name: fake-cf-api-release-alpine-v${{ github.run_number }}
          asset_content_type: application/octet-stream

      - name: Upload macos release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: macos
          asset_name: fake-cf-api-release-macos-v${{ github.run_number }}
          asset_content_type: application/octet-stream

